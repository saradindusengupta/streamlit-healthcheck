# .github/workflows/main.yml
name: main

permissions:
  contents: write

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  tests_linux:
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.11]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
          persist-credentials: true
      - uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install test dependencies
        run: pip install -r requirements-test.txt
      - name: Install project
        run: make install
      - name: Run tests
        run: make test
      - name: Run coverage
        run: pytest --cov --cov-branch --cov-report=xml
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true

  tag_on_main:
    needs: [tests_linux]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
          persist-credentials: true
      - name: Set up Git user
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
      - name: Get latest tag
        id: get_tag
        run: |
          git fetch --tags
          TAG=$(git tag --sort=-v:refname | grep -E '^([0-9]+\.[0-9]+\.[0-9]+)$' | head -n 1)
          echo "latest_tag=$TAG" >> $GITHUB_OUTPUT

      - name: Bump patch version
        id: bump_version
        run: |
          IFS='.' read -r MAJOR MINOR PATCH <<< "${{ steps.get_tag.outputs.latest_tag }}"
          if [ -z "$MAJOR" ] || [ -z "$MINOR" ] || [ -z "$PATCH" ]; then
            NEW_TAG="0.1.0"
          else
            NEW_PATCH=$((PATCH + 1))
            NEW_TAG="$MAJOR.$MINOR.$NEW_PATCH"
          fi
          echo "new_tag=$NEW_TAG" >> $GITHUB_OUTPUT

      - name: Create and push new tag
        run: |
          git tag "${{ steps.bump_version.outputs.new_tag }}"
          git push origin "${{ steps.bump_version.outputs.new_tag }}"
          echo "tag_name=${{ steps.bump_version.outputs.new_tag }}" >> $GITHUB_OUTPUT