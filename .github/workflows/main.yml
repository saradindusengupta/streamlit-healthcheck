# .github/workflows/main.yml
name: main

permissions:
  contents: write

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  tests_linux:
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.11]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
          persist-credentials: true
      - uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install test dependencies
        run: pip install -r requirements-test.txt
      - name: Install project
        run: make install
      - name: Run tests
        run: make test
      - name: Run coverage
        run: pytest --cov --cov-branch --cov-report=xml
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true

  tag_on_main:
    needs: [tests_linux]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
          persist-credentials: true
      - name: Set up Git user
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
      - name: Install setuptools_scm
        run: pip install setuptools_scm
      - name: Get version from setuptools_scm
        id: scmver
        run: |
          VERSION=$(python -m setuptools_scm)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
      - name: Check if version is a release (x.y.z)
        id: check_release
        run: |
          VERSION="${{ steps.scmver.outputs.version }}"
          if [[ "$VERSION" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "is_release=true" >> $GITHUB_OUTPUT
          else
            echo "is_release=false" >> $GITHUB_OUTPUT
          fi
      - name: Create tag from setuptools_scm version
        id: tag
        if: steps.check_release.outputs.is_release == 'true'
        run: |
          TAG_NAME="v${{ steps.scmver.outputs.version }}"
          git tag "$TAG_NAME"
          git push origin "$TAG_NAME"
          echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT
      - name: Output tag name
        run: echo "Created tag ${{ steps.tag.outputs.tag_name }}"